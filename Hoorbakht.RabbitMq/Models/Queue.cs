using System.Text.Json.Serialization;

namespace Hoorbakht.RabbitMq.Models;

public record Queue(
    [property: JsonPropertyName("arguments")] Arguments Arguments,
    [property: JsonPropertyName("auto_delete")] bool? AutoDelete,
    [property: JsonPropertyName("backing_queue_status")] BackingQueueStatus BackingQueueStatus,
    [property: JsonPropertyName("consumer_capacity")] int? ConsumerCapacity,
    [property: JsonPropertyName("consumer_utilisation")] int? ConsumerUtilisation,
    [property: JsonPropertyName("consumers")] int? Consumers,
    [property: JsonPropertyName("durable")] bool? Durable,
    [property: JsonPropertyName("effective_policy_definition")] EffectivePolicyDefinition EffectivePolicyDefinition,
    [property: JsonPropertyName("exclusive")] bool? Exclusive,
    [property: JsonPropertyName("exclusive_consumer_tag")] object ExclusiveConsumerTag,
    [property: JsonPropertyName("garbage_collection")] GarbageCollection GarbageCollection,
    [property: JsonPropertyName("head_message_timestamp")] object HeadMessageTimestamp,
    [property: JsonPropertyName("idle_since")] DateTime? IdleSince,
    [property: JsonPropertyName("memory")] int? Memory,
    [property: JsonPropertyName("message_bytes")] int? MessageBytes,
    [property: JsonPropertyName("message_bytes_paged_out")] int? MessageBytesPagedOut,
    [property: JsonPropertyName("message_bytes_persistent")] int? MessageBytesPersistent,
    [property: JsonPropertyName("message_bytes_ram")] int? MessageBytesRam,
    [property: JsonPropertyName("message_bytes_ready")] int? MessageBytesReady,
    [property: JsonPropertyName("message_bytes_unacknowledged")] int? MessageBytesUnacknowledged,
    [property: JsonPropertyName("messages")] int? Messages,
    [property: JsonPropertyName("messages_details")] MessagesDetails MessagesDetails,
    [property: JsonPropertyName("messages_paged_out")] int? MessagesPagedOut,
    [property: JsonPropertyName("messages_persistent")] int? MessagesPersistent,
    [property: JsonPropertyName("messages_ram")] int? MessagesRam,
    [property: JsonPropertyName("messages_ready")] int? MessagesReady,
    [property: JsonPropertyName("messages_ready_details")] MessagesReadyDetails MessagesReadyDetails,
    [property: JsonPropertyName("messages_ready_ram")] int? MessagesReadyRam,
    [property: JsonPropertyName("messages_unacknowledged")] int? MessagesUnacknowledged,
    [property: JsonPropertyName("messages_unacknowledged_details")] MessagesUnacknowledgedDetails MessagesUnacknowledgedDetails,
    [property: JsonPropertyName("messages_unacknowledged_ram")] int? MessagesUnacknowledgedRam,
    [property: JsonPropertyName("name")] string Name,
    [property: JsonPropertyName("node")] string Node,
    [property: JsonPropertyName("operator_policy")] object OperatorPolicy,
    [property: JsonPropertyName("policy")] object Policy,
    [property: JsonPropertyName("recoverable_slaves")] object RecoverableSlaves,
    [property: JsonPropertyName("reductions")] int? Reductions,
    [property: JsonPropertyName("reductions_details")] ReductionsDetails ReductionsDetails,
    [property: JsonPropertyName("single_active_consumer_tag")] object SingleActiveConsumerTag,
    [property: JsonPropertyName("state")] string State,
    [property: JsonPropertyName("type")] string Type,
    [property: JsonPropertyName("vhost")] string Vhost
);